#ifndef PSQT_H
#define PSQT_H

#include <stdint.h>

/**
 * @brief Die PSQT aus der Sicht der weißen Figuren für das Mittelspiel.
 * 
 * Die Positionstabellen bilden auf folgende Felder ab:
 * A1, B1, C1, D1, E1, F1, G1, H1,
 * A2, B2, C2, D2, E2, F2, G2, H2,
 * A3, B3, C3, D3, E3, F3, G3, H3,
 * A4, B4, C4, D4, E4, F4, G4, H4,
 * A5, B5, C5, D5, E5, F5, G5, H5,
 * A6, B6, C6, D6, E6, F6, G6, H6,
 * A7, B7, C7, D7, E7, F7, G7, H7,
 * A8, B8, C8, D8, E8, F8, G8, H8
 */
static constexpr int16_t MG_PSQT[7][64] = {
        // Empty
        {},
        // Pawn
        {
                0, 0, 0, 0, 0, 0, 0, 0,
                -6, 0, -19, -24, -25, 4, 8, -6,
                -7, -2, -19, -27, -27, -12, -2, -7,
                0, 0, 13, 21, 23, 13, 0, 0,
                -4, -10, 7, 20, 20, 7, -10, -4,
                -5, -14, -15, -9, -9, -15, -14, -5,
                23, 10, 9, 7, 7, 9, 10, 23,
                0, 0, 0, 0, 0, 0, 0, 0,
        },
        // Knight
        {
                -74, -19, -22, -31, -30, -21, -15, -66,
                -45, -9, -11, -9, -7, -23, -20, -33,
                -30, -1, 5, -6, -8, 5, -10, -31,
                -9, 7, 13, 18, 20, 15, 8, -8,
                4, 12, 18, 21, 22, 18, 12, 9,
                2, 9, 2, -10, -3, 3, 10, 6,
                -8, -19, -13, -13, -30, -13, -19, -8,
                -92, -55, -18, -14, -14, -6, -53, -92,
        },
        // Bishop
        {
                -41, -22, -10, -3, -4, -14, -27, -48,
                -34, 16, -1, 4, 3, 0, 15, -33,
                -7, -12, 4, 15, 15, -6, -17, -10,
                -15, 8, 14, 4, 6, 19, 10, -7,
                -27, -12, -7, -2, 0, -3, -5, -29,
                -5, -21, -18, -4, -5, -13, -21, 14,
                -23, -9, -12, -26, -20, -17, -10, -22,
                -52, -23, -19, -12, -11, -20, -25, -55,
        },
        // Rook
        {
                -19, -22, 3, 11, 9, 0, -27, -20,
                -17, -8, -1, 4, 4, -4, -14, -23,
                -26, -9, -8, -3, -5, -16, -17, -29,
                -26, -9, -5, 6, 9, -10, -18, -30,
                -9, -4, 12, 15, 14, 3, -3, -11,
                14, 12, 7, 7, 20, 11, 7, 0,
                31, 28, 37, 43, 38, 20, 15, 11,
                23, 20, 14, 27, 20, 12, 20, 23,
        },
        // Queen
        {
                -45, -39, -8, 10, -15, -36, -51, -63,
                -27, -35, 3, 0, -1, -7, -47, -40,
                -8, 14, 5, 3, 2, -12, -3, -21,
                -24, -19, -2, -34, -16, 4, -15, -21,
                -20, -21, -25, -28, -24, -17, -19, -19,
                13, 9, 2, -45, -51, -29, -25, -22,
                29, 18, 17, 3, 0, 11, 15, 23,
                18, 16, 13, 9, 9, 10, 11, 18,

        },
        // King
        {
                -10, 17, 5, -26, -17, -18, 21, -9,
                -1, 7, -11, -34, -31, -17, 9, 0,
                -12, -15, -22, -36, -36, -22, -12, -10,
                -23, -28, -29, -38, -37, -28, -26, -22,
                -27, -29, -31, -40, -40, -28, -27, -24,
                -22, -25, -26, -37, -37, -25, -20, -18,
                -9, -13, -14, -19, -20, -10, -9, -6,
                3, 0, -13, -23, -24, -15, -1, 2,
        }
};

/**
 * @brief Die PSQT aus der Sicht der weißen Figuren für das Endspiel.
 * 
 * Die Positionstabellen bilden wie bei MG_PSQT auf folgende Felder ab:
 * A1, B1, C1, D1, E1, F1, G1, H1,
 * A2, B2, C2, D2, E2, F2, G2, H2,
 * A3, B3, C3, D3, E3, F3, G3, H3,
 * A4, B4, C4, D4, E4, F4, G4, H4,
 * A5, B5, C5, D5, E5, F5, G5, H5,
 * A6, B6, C6, D6, E6, F6, G6, H6,
 * A7, B7, C7, D7, E7, F7, G7, H7,
 * A8, B8, C8, D8, E8, F8, G8, H8
 */
static constexpr int16_t EG_PSQT[7][64] = {
        // Empty
        {},
        // Pawn
        {
                0, 0, 0, 0, 0, 0, 0, 0, 
                -21, -24, -31, -39, -40, -18, -10, -25,
                -32, -28, -43, -51, -50, -33, -24, -25,
                -10, -9, -14, -17, -17, -6, 5, -4,
                1, 1, 5, 8, 10, -5, 9, 2,
                28, 23, 22, 19, 18, 18, 20, 25,
                53, 45, 39, 34, 31, 35, 41, 49,
                0, 0, 0, 0, 0, 0, 0, 0,
        },
        // Knight
        {
                -32, -25, -9, -11, -7, -11, -25, -14, 
                -22, -11, -10, -1, -2, -5, -10, -21, 
                -11, -10, -1, 5, 7, 0, -1, -11, 
                -9, 2, 8, 8, 12, 8, -3, -9, 
                -9, 4, 5, 11, 11, 11, 1, -8, 
                -20, -9, -4, 0, 4, 5, -10, -12, 
                -26, -12, -12, -4, -1, -12, -4, -12, 
                -49, -31, -13, -15, -14, -6, -19, -29, 
        },
        // Bishop
        {
                -8, -2, -8, -4, -2, -11, -4, -11, 
                -13, -7, -4, 2, 0, -3, -9, -7, 
                -7, -3, 1, 6, 5, 4, -1, -6, 
                -4, -1, 5, 3, 9, 6, 1, -3, 
                1, 1, 5, 7, 4, 6, 4, -1, 
                2, 0, 3, -1, 0, 0, -4, 1, 
                -7, -2, -6, -1, -6, 3, -2, -4, 
                -12, -8, -4, -3, -4, -5, -10, -7, 
        },
        // Rook
        {
                -10, 2, -6, -2, 0, 1, 1, -4, 
                -1, -5, -4, -4, 1, 0, -3, -3, 
                -8, -4, -6, -3, 0, -2, 0, -2, 
                -5, -4, -3, -2, 2, 4, 2, 1, 
                1, 0, 0, 1, 0, 6, 1, 2, 
                -1, -2, -1, 2, 2, 3, 3, 3, 
                1, 4, 1, -1, 5, 6, 6, 5, 
                2, 4, 6, 6, 7, 9, 5, 6, 
        },
        // Queen
        {
                -4, -4, -3, 0, 1, -5, -6, -5,
                -5, 0, -1, 2, 1, -2, 0, -4,
                -3, -1, 2, 4, 3, 2, 0, -2,
                -1, 1, 3, 4, 5, 3, 2, 0,
                -2, -1, 1, 3, 2, 2, 1, -1,
                1, 2, 4, 6, 6, 5, 3, 0,
                3, 5, 2, 8, 9, 6, 5, 2,
                7, 5, 4, 11, 11, 8, 6, 6,
        },
        // King
        {
                -43, -35, -39, -30, -31, -37, -29, -47,
                -35, -26, -30, -21, -20, -28, -24, -28,
                -17, -9, -7, 4, 6, -10, -8, -19,
                -4, 0, 5, 15, 13, 1, -1, -10,
                12, 7, 12, 32, 35, 10, 8, 14,
                26, 13, 16, 26, 28, 14, 11, 22,
                28, 26, 24, 18, 17, 23, 27, 31,
                -4, 11, 5, -1, 0, 2, 12, -1,
        }
};


#endif